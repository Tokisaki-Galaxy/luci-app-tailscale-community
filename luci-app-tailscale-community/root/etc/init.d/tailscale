
#!/bin/sh /etc/rc.common

START=95
STOP=10
USE_PROCD=1

PROG=/usr/sbin/tailscaled
CONFIG_FILE=/var/etc/tailscale.conf

start_service() {
    local enabled
    config_load 'tailscale'
    config_get_bool enabled main enabled 0
    if [ "$enabled" -eq 0 ]; then
        return 1
    fi

    procd_open_instance
    procd_set_param command "$PROG" -statedir /var/lib/tailscale -state /var/lib/tailscale/tailscaled.state
    procd_set_param respawn
    procd_close_instance

    # Wait for tailscaled to start
    sleep 2

    local args=""
    local val

    config_get_bool val main accept_dns 0
    [ "$val" -eq 1 ] && args="$args --accept-dns"

    config_get_bool val main accept_routes 0
    [ "$val" -eq 1 ] && args="$args --accept-routes"

    config_get_bool val main advertise_connector 0
    [ "$val" -eq 1 ] && args="$args --advertise-connector"

    config_get_bool val main advertise_exit_node 0
    [ "$val" -eq 1 ] && args="$args --advertise-exit-node"

    config_get val main advertise_routes
    [ -n "$val" ] && args="$args --advertise-routes=$val"

    config_get val main exit_node
    [ -n "$val" ] && args="$args --exit-node=$val"

    config_get_bool val main exit_node_allow_lan_access 0
    [ "$val" -eq 1 ] && args="$args --exit-node-allow-lan-access"

    config_get val main hostname
    [ -n "$val" ] && args="$args --hostname=$val"
    
    config_get val main nickname
    [ -n "$val" ] && args="$args --nickname=$val"

    config_get_bool val main report_posture 0
    [ "$val" -eq 1 ] && args="$args --report-posture"

    config_get_bool val main shields_up 0
    [ "$val" -eq 1 ] && args="$args --shields-up"

    config_get_bool val main ssh 0
    [ "$val" -eq 1 ] && args="$args --ssh"
    
    config_get_bool val main update_check 1
    [ "$val" -eq 1 ] && args="$args --update-check"

    config_get_bool val main webclient 0
    [ "$val" -eq 1 ] && args="$args --webclient"

    config_get val main accept_risk
    [ -n "$val" ] && args="$args --accept-risk=$val"

    if [ -n "$args" ]; then
        tailscale set $args
    fi

    tailscale up
}

stop_service() {
    tailscale down
    killall tailscaled
}

reload_service() {
    stop
    start
}
